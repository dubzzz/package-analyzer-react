{"version":3,"sources":["redux/reducers/details.tsx","redux/actionTypes.tsx","redux/reducers/router.tsx","redux/reducers/search.tsx","redux/reducers/index.tsx","redux/actions.tsx","redux/sagas/PackageApi.tsx","redux/sagas/index.tsx","redux/store.tsx","components/search/QueryError.tsx","components/search/PackageQueryResult.tsx","components/search/QueryResults.tsx","components/search/PackageSelector.tsx","components/router/RouteRedirect.tsx","components/details/PackageDetailsGraph.tsx","components/router/FloatingMenu.tsx","index.tsx","components/SearchPage.tsx","components/DetailsPage.tsx"],"names":["DependenciesStatus","FETCH_PACKAGES_LIST","FETCH_MULTIPLE_PACKAGES_DETAILS","PageType","initialState","knownDependencies","SearchQueryState","page","SearchPage","hasToRedirect","state","Success","query","results","combined","combineReducers","details","arguments","length","undefined","action","type","packages","payload","newDeps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","status","OnGoing","dependencies","err","return","Object","objectSpread","_ref2$payload","packageName","deps","defineProperty","keys","collected","metadata","_ref3$payload","error","Error","statusText","router","search","_ref$payload","searchResults","fetchPackagesListAction","numResults","updatePackagesListAction","errorPackagesListAction","fetchMultiplePackagesDetailsAction","startMultiplePackagesDetailsAction","updatePackageDetailsAction","errorPackageDetailsAction","redirectToPageAction","redirect","endOfRedirectAction","apiUrl","PackageApi","classCallCheck","this","createClass","key","_deps","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","concat","encodeURIComponent","fetch","sent","ok","json","abrupt","stop","_x","apply","_list","_callee2","num","_context2","_x2","_x3","fetchPackagesList","fetchMultiplePackagesDetails","rootSaga","_action$payload","call","list","put","t0","message","String","_marked","_loop","_context3","depsDetails","delegateYield","t1","finish","_marked2","_context4","takeLatest","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","QueryError","_this","react_default","createElement","className","props","Button","variant","onClick","retry","Refresh_default","React","Component","PackageQueryResult","package","name","authorName","author","username","scores","score","detail","adjustedScores","maintenance","Math","round","popularity","quality","Card_default","select","CardHeader_default","avatar","Avatar_default","aria-label","title","subheader","version","CardContent_default","Typography_default","color","gutterBottom","component","description","QueryResults","id","map","r","components_search_PackageQueryResult","searchScore","selectPackage","PackageSelector","_React$Component","possibleConstructorReturn","getPrototypeOf","currentQuery","inherits","NumResultsPerQuery","event","currentTarget","setState","fetchQuery","DetailsPage","_this2","adornmentIcon","Http_default","Done_default","Error_default","TextField","label","onChange","InputProps","endAdornment","InputAdornment_default","position","components_search_QueryResults","openPackage","components_search_QueryError","connect","dispatch","bindActionCreators","RouteRedirect","endOfRedirectDetected","nextProps","location","react","Redirect","to","withRouter","PackageDetailsGraph","computeState","width","window","innerWidth","nodes","links","unscanned","ready","total","numLoading","antiDuplicates","unvisited","depth","_ref2","pop","currentPackage","push","f","min","fstring","toString","requirement","target","source","console","warn","data","JSON","stringify","CircularProgress_default","n","DefaultWidth","height","floor","DefaultHeight","style","textAlign","display","react_force_graph_module","graphData","nodeLabel","linkDirectionalParticles","FloatingMenu","Fab","Search_default","rootElement","document","getElementById","ReactDOM","render","es","store","HashRouter","Route","exact","path","router_RouteRedirect","components_search_PackageSelector","components_router_FloatingMenu","components_details_PackageDetailsGraph","match","params"],"mappings":"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","file":"static/js/main.4aba741d.chunk.js","sourcesContent":["import {\n  Actions,\n  ActionStartMultiplePackagesDetails,\n  ActionUpdatePackageDetails,\n  ActionErrorPackageDetails\n} from '../actions';\nimport { UPDATE_PACKAGE_DETAILS, ERROR_PACKAGE_DETAILS, START_MULTIPLE_PACKAGES_DETAILS } from '../actionTypes';\n\nexport enum DependenciesStatus {\n  OnGoing = -1,\n  Error = 0,\n  Success = 1\n}\nexport type PackageDescription = {\n  status: DependenciesStatus;\n  statusText?: string;\n  dependencies: string[];\n};\nexport type KnownDependencies = { [packageName: string]: PackageDescription };\nexport type PackageDetailsState = {\n  knownDependencies: KnownDependencies;\n};\nconst initialState: PackageDetailsState = {\n  knownDependencies: {}\n};\n\nexport default function(state = initialState, action: Actions) {\n  switch (action.type) {\n    case START_MULTIPLE_PACKAGES_DETAILS: {\n      const {\n        payload: { packages }\n      } = action as ActionStartMultiplePackagesDetails;\n      const newDeps: KnownDependencies = {};\n      for (const packageName of packages) {\n        newDeps[packageName] = { status: DependenciesStatus.OnGoing, dependencies: [] };\n      }\n      return {\n        ...state,\n        knownDependencies: {\n          ...state.knownDependencies,\n          ...newDeps\n        }\n      };\n    }\n    case UPDATE_PACKAGE_DETAILS: {\n      const {\n        payload: { packageName, deps }\n      } = action as ActionUpdatePackageDetails;\n      return {\n        ...state,\n        knownDependencies: {\n          ...state.knownDependencies,\n          [packageName]: {\n            status: DependenciesStatus.Success,\n            dependencies: Object.keys(deps.collected.metadata.dependencies || [])\n          }\n        }\n      };\n    }\n    case ERROR_PACKAGE_DETAILS: {\n      const {\n        payload: { packageName, error }\n      } = action as ActionErrorPackageDetails;\n      return {\n        ...state,\n        knownDependencies: {\n          ...state.knownDependencies,\n          [packageName]: { status: DependenciesStatus.Error, statusText: error, dependencies: [] }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n","// search\r\nexport const FETCH_PACKAGES_LIST = 'FETCH_PACKAGES_LIST';\r\nexport const UPDATE_PACKAGES_LIST = 'UPDATE_PACKAGES_LIST';\r\nexport const ERROR_PACKAGES_LIST = 'ERROR_PACKAGES_LIST';\r\n\r\n// details\r\nexport const FETCH_MULTIPLE_PACKAGES_DETAILS = 'FETCH_MULTIPLE_PACKAGES_DETAILS';\r\nexport const START_MULTIPLE_PACKAGES_DETAILS = 'START_MULTIPLE_PACKAGES_DETAILS';\r\nexport const UPDATE_PACKAGE_DETAILS = 'UPDATE_PACKAGE_DETAILS';\r\nexport const ERROR_PACKAGE_DETAILS = 'ERROR_PACKAGE_DETAILS';\r\n\r\n// router\r\nexport const REDIRECT_TO_PAGE = 'REDIRECT_TO_PAGE';\r\nexport const END_OF_REDIRECT = 'END_OF_REDIRECT';\r\n","import { Actions, ActionRedirectToPage } from '../actions';\nimport { REDIRECT_TO_PAGE, END_OF_REDIRECT } from '../actionTypes';\n\nexport enum PageType {\n  SearchPage = 'search',\n  DetailsPage = 'details'\n}\n\nexport type RedirectToSearch = {\n  page: PageType.SearchPage;\n};\nexport type RedirectToDetails = {\n  page: PageType.DetailsPage;\n  packageName: string;\n};\nexport type RedirectTo = RedirectToSearch | RedirectToDetails;\n\nexport type RouterState = RedirectTo & { hasToRedirect: boolean };\nconst initialState: RouterState = {\n  page: PageType.SearchPage,\n  hasToRedirect: false\n};\n\nexport default function(state = initialState, action: Actions) {\n  switch (action.type) {\n    case REDIRECT_TO_PAGE: {\n      const { payload } = action as ActionRedirectToPage;\n      return { ...state, hasToRedirect: true, ...payload };\n    }\n    case END_OF_REDIRECT: {\n      return { ...state, hasToRedirect: false };\n    }\n    default:\n      return state;\n  }\n}\n","import { Actions, ActionUpdatePackagesList, ActionErrorPackagesList } from '../actions';\nimport { UPDATE_PACKAGES_LIST, ERROR_PACKAGES_LIST } from '../actionTypes';\nimport { SearchObjectType } from '../sagas/models/searchResponseType';\n\nexport enum SearchQueryState {\n  Success = 'success',\n  Error = 'error'\n}\nexport type SearchSuccessState = {\n  state: SearchQueryState.Success;\n  query: string;\n  results: SearchObjectType[];\n};\nexport type SearchErrorState = {\n  state: SearchQueryState.Error;\n  query: string;\n  error: string;\n};\nexport type SearchState = SearchSuccessState | SearchErrorState;\nconst initialState: SearchState = {\n  state: SearchQueryState.Success,\n  query: '',\n  results: []\n};\n\nexport default function(state = initialState, action: Actions): SearchState {\n  switch (action.type) {\n    case UPDATE_PACKAGES_LIST: {\n      const {\n        payload: { query, searchResults }\n      } = action as ActionUpdatePackagesList;\n      return { ...state, state: SearchQueryState.Success, query, results: searchResults };\n    }\n    case ERROR_PACKAGES_LIST: {\n      const {\n        payload: { query, error }\n      } = action as ActionErrorPackagesList;\n      return { ...state, state: SearchQueryState.Error, query, error };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, Reducer } from 'redux';\r\nimport details from './details';\r\nimport router from './router';\r\nimport search from './search';\r\n\r\nconst combined = combineReducers({ details, router, search });\r\nexport default combined;\r\nexport type ReduxState = (typeof combined) extends Reducer<infer U> ? U : never;\r\n","import {\r\n  FETCH_PACKAGES_LIST,\r\n  UPDATE_PACKAGES_LIST,\r\n  ERROR_PACKAGES_LIST,\r\n  UPDATE_PACKAGE_DETAILS,\r\n  ERROR_PACKAGE_DETAILS,\r\n  FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  START_MULTIPLE_PACKAGES_DETAILS,\r\n  END_OF_REDIRECT,\r\n  REDIRECT_TO_PAGE\r\n} from './actionTypes';\r\nimport { Deps } from './sagas/PackageApi';\r\nimport { RedirectTo } from './reducers/router';\r\nimport { SearchResponseType } from './sagas/models/searchResponseType';\r\n\r\n// search\r\nexport const fetchPackagesListAction = (query: string, numResults: number) => ({\r\n  type: FETCH_PACKAGES_LIST,\r\n  payload: { query, numResults }\r\n});\r\nexport const updatePackagesListAction = (query: string, searchResults: SearchResponseType) => ({\r\n  type: UPDATE_PACKAGES_LIST,\r\n  payload: { query, searchResults }\r\n});\r\nexport const errorPackagesListAction = (query: string, error: string) => ({\r\n  type: ERROR_PACKAGES_LIST,\r\n  payload: { query, error }\r\n});\r\n\r\n// details\r\nexport const fetchMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const startMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: START_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const updatePackageDetailsAction = (packageName: string, deps: Deps) => ({\r\n  type: UPDATE_PACKAGE_DETAILS,\r\n  payload: { packageName, deps }\r\n});\r\nexport const errorPackageDetailsAction = (packageName: string, error: string) => ({\r\n  type: ERROR_PACKAGE_DETAILS,\r\n  payload: { packageName, error }\r\n});\r\n\r\n// router\r\nexport const redirectToPageAction = (redirect: RedirectTo) => ({\r\n  type: REDIRECT_TO_PAGE,\r\n  payload: redirect\r\n});\r\nexport const endOfRedirectAction = () => ({\r\n  type: END_OF_REDIRECT,\r\n  payload: {}\r\n});\r\n\r\nexport type ActionFetchPackagesList = ReturnType<typeof fetchPackagesListAction>;\r\nexport type ActionUpdatePackagesList = ReturnType<typeof updatePackagesListAction>;\r\nexport type ActionErrorPackagesList = ReturnType<typeof errorPackagesListAction>;\r\nexport type ActionFetchMultiplePackagesDetails = ReturnType<typeof fetchMultiplePackagesDetailsAction>;\r\nexport type ActionStartMultiplePackagesDetails = ReturnType<typeof startMultiplePackagesDetailsAction>;\r\nexport type ActionUpdatePackageDetails = ReturnType<typeof updatePackageDetailsAction>;\r\nexport type ActionErrorPackageDetails = ReturnType<typeof errorPackageDetailsAction>;\r\nexport type ActionRedirectToPage = ReturnType<typeof redirectToPageAction>;\r\nexport type ActionEndOfRedirect = ReturnType<typeof endOfRedirectAction>;\r\nexport type Actions =\r\n  | ActionFetchPackagesList\r\n  | ActionUpdatePackagesList\r\n  | ActionErrorPackagesList\r\n  | ActionFetchMultiplePackagesDetails\r\n  | ActionStartMultiplePackagesDetails\r\n  | ActionUpdatePackageDetails\r\n  | ActionErrorPackageDetails\r\n  | ActionRedirectToPage\r\n  | ActionEndOfRedirect;\r\n","import { SearchResponseType } from './models/searchResponseType';\r\n\r\n// Documentation available at:\r\n// https://api-docs.npms.io/\r\nconst apiUrl = 'https://api.npms.io';\r\n\r\nexport type Deps = {\r\n  collected: {\r\n    metadata: {\r\n      dependencies?: { [packageName: string]: string };\r\n    };\r\n  };\r\n};\r\n\r\nexport class PackageApi {\r\n  static async deps(packageName: string) {\r\n    const url = `${apiUrl}/v2/package/${encodeURIComponent(packageName)}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as Deps;\r\n  }\r\n  static async list(query: string, num: number) {\r\n    if (query.length === 0) {\r\n      return [];\r\n    }\r\n    const url = `${apiUrl}/v2/search/suggestions?q=${encodeURIComponent(query)}&size=${num}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as SearchResponseType;\r\n  }\r\n}\r\n","import { SagaIterator } from 'redux-saga';\r\nimport { takeLatest, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { FETCH_PACKAGES_LIST, FETCH_MULTIPLE_PACKAGES_DETAILS } from '../actionTypes';\r\nimport {\r\n  ActionFetchPackagesList,\r\n  updatePackagesListAction,\r\n  errorPackagesListAction,\r\n  ActionFetchMultiplePackagesDetails,\r\n  updatePackageDetailsAction,\r\n  errorPackageDetailsAction,\r\n  startMultiplePackagesDetailsAction\r\n} from '../actions';\r\nimport { PackageApi, Deps } from './PackageApi';\r\nimport { SearchResponseType } from './models/searchResponseType';\r\n\r\nfunction* fetchPackagesList(action: ActionFetchPackagesList) {\r\n  const {\r\n    payload: { query, numResults }\r\n  } = action;\r\n  try {\r\n    const searchResults: SearchResponseType = yield call(() => PackageApi.list(query, numResults));\r\n    yield put(updatePackagesListAction(query, searchResults));\r\n  } catch (error) {\r\n    yield put(errorPackagesListAction(query, (error as any).message || String(error)));\r\n  }\r\n}\r\n\r\nfunction* fetchMultiplePackagesDetails(action: ActionFetchMultiplePackagesDetails) {\r\n  const {\r\n    payload: { packages }\r\n  } = action;\r\n  yield put(startMultiplePackagesDetailsAction(packages));\r\n  for (const packageName of packages) {\r\n    try {\r\n      const depsDetails: Deps = yield call(() => PackageApi.deps(packageName));\r\n      yield put(updatePackageDetailsAction(packageName, depsDetails));\r\n    } catch (error) {\r\n      yield put(errorPackageDetailsAction(packageName, (error as any).message || String(error)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga(): SagaIterator {\r\n  yield takeLatest(FETCH_PACKAGES_LIST, fetchPackagesList);\r\n  yield takeEvery(FETCH_MULTIPLE_PACKAGES_DETAILS, fetchMultiplePackagesDetails);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\r\n\r\nimport './QueryError.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\n\r\ninterface Props {\r\n  error: string;\r\n  retry: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryError extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <div className=\"query-error\">\r\n        <p>Query failed with error: {this.props.error}</p>\r\n        <Button variant=\"contained\" onClick={() => this.props.retry()}>\r\n          Retry <Refresh />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryError;\r\n","import React from 'react';\r\n\r\nimport './PackageQueryResult.css';\r\nimport Card from '@material-ui/core/Card/Card';\r\nimport CardContent from '@material-ui/core/CardContent/CardContent';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar/Avatar';\r\nimport { SearchPackageType, SearchScoreType } from '../../redux/sagas/models/searchResponseType';\r\n\r\ninterface Props {\r\n  package: SearchPackageType;\r\n  score: SearchScoreType;\r\n  searchScore: number;\r\n  select: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass PackageQueryResult extends React.Component<Props, State> {\r\n  render() {\r\n    const packageName = this.props.package.name;\r\n    const authorName = this.props.package.author ? this.props.package.author.username : 'N.A';\r\n    const scores = this.props.score.detail;\r\n    const adjustedScores = {\r\n      maintenance: Math.round(5 * scores.maintenance),\r\n      popularity: Math.round(5 * scores.popularity),\r\n      quality: Math.round(5 * scores.quality)\r\n    };\r\n    return (\r\n      <Card className=\"package-card\" onClick={() => this.props.select()}>\r\n        <CardHeader\r\n          className=\"card-header\"\r\n          avatar={\r\n            <Avatar className=\"card-avatar\" aria-label={packageName}>\r\n              {packageName[0] || ''}\r\n            </Avatar>\r\n          }\r\n          title={packageName}\r\n          subheader={this.props.package.version}\r\n        />\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {authorName}\r\n          </Typography>\r\n          <Typography component=\"p\">{this.props.package.description}</Typography>\r\n          <div className=\"package-scores\">\r\n            <Avatar title=\"maintenance [0-5]\" className={`package-score-${adjustedScores.maintenance}`}>\r\n              {adjustedScores.maintenance}\r\n            </Avatar>\r\n            <Avatar title=\"popularity [0-5]\" className={`package-score-${adjustedScores.popularity}`}>\r\n              {adjustedScores.popularity}\r\n            </Avatar>\r\n            <Avatar title=\"quality [0-5]\" className={`package-score-${adjustedScores.quality}`}>\r\n              {adjustedScores.quality}\r\n            </Avatar>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PackageQueryResult;\r\n","import React from 'react';\r\n\r\nimport './QueryResults.css';\r\nimport PackageQueryResult from './PackageQueryResult';\r\nimport { SearchObjectType } from '../../redux/sagas/models/searchResponseType';\r\n\r\ninterface Props {\r\n  query: string;\r\n  results: SearchObjectType[];\r\n  selectPackage: (packageName: string) => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryResults extends React.Component<Props, State> {\r\n  render() {\r\n    const id = 'query-results';\r\n    if (this.props.query.length === 0) {\r\n      return <div id={id} />;\r\n    }\r\n    if (this.props.results.length === 0) {\r\n      return (\r\n        <div id={id}>\r\n          <p>No results</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id={id}>\r\n        <div className=\"query-results-cards\">\r\n          <ul>\r\n            {this.props.results.map((r, key) => (\r\n              <li key={`li-${key}`}>\r\n                <PackageQueryResult\r\n                  key={key}\r\n                  package={r.package}\r\n                  score={r.score}\r\n                  searchScore={r.searchScore}\r\n                  select={() => this.props.selectPackage(r.package.name)}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryResults;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageSelector.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fetchPackagesListAction, redirectToPageAction } from '../../redux/actions';\r\nimport QueryError from './QueryError';\r\nimport QueryResults from './QueryResults';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\r\nimport Http from '@material-ui/icons/Http';\r\nimport Error from '@material-ui/icons/Error';\r\nimport Done from '@material-ui/icons/Done';\r\nimport { PageType } from '../../redux/reducers/router';\r\nimport { SearchQueryState } from '../../redux/reducers/search';\r\n\r\ntype ComponentProps = {};\r\ntype State = { currentQuery: string };\r\n\r\ntype Props = ComponentProps & StateProps & DispatchProps;\r\n\r\nexport class PackageSelector extends React.Component<Props, State> {\r\n  static NumResultsPerQuery = 9;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { currentQuery: props.query };\r\n  }\r\n  fetchQuery(query: string) {\r\n    this.props.fetchPackagesListAction(query, PackageSelector.NumResultsPerQuery);\r\n  }\r\n  fetch(event: ChangeEvent<HTMLInputElement>) {\r\n    const query = event.currentTarget.value;\r\n    this.setState({ currentQuery: query });\r\n    this.fetchQuery(query);\r\n  }\r\n  openPackage(packageName: string) {\r\n    this.props.redirectToPageAction({ page: PageType.DetailsPage, packageName });\r\n  }\r\n  render() {\r\n    const adornmentIcon =\r\n      this.state.currentQuery !== this.props.query ? (\r\n        <Http />\r\n      ) : this.props.state === SearchQueryState.Success ? (\r\n        <Done />\r\n      ) : (\r\n        <Error />\r\n      );\r\n    return (\r\n      <div id=\"package-selector\">\r\n        <TextField\r\n          id=\"package-name-input\"\r\n          label=\"Package Name\"\r\n          variant=\"outlined\"\r\n          onChange={(event: ChangeEvent<HTMLInputElement>) => this.fetch(event)}\r\n          value={this.state.currentQuery}\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"start\">{adornmentIcon}</InputAdornment>\r\n          }}\r\n        />\r\n        {this.props.state === SearchQueryState.Success ? (\r\n          <QueryResults\r\n            query={this.props.query}\r\n            results={this.props.results}\r\n            selectPackage={(packageName: string) => this.openPackage(packageName)}\r\n          />\r\n        ) : (\r\n          <QueryError error={this.props.error} retry={() => this.fetchQuery(this.state.currentQuery)} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxState) => ({ ...state.search });\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\r\n  ...bindActionCreators({ fetchPackagesListAction, redirectToPageAction }, dispatch)\r\n});\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\n// TODO: Investigate typings issue on connect\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageSelector as any);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { Dispatch, Action, bindActionCreators } from 'redux';\r\nimport { endOfRedirectAction } from '../../redux/actions';\r\nimport { PageType, RedirectToDetails } from '../../redux/reducers/router';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = { endOfRedirectDetected: boolean };\r\n\r\nexport class RouteRedirect extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { endOfRedirectDetected: false };\r\n  }\r\n  componentWillReceiveProps(nextProps: any) {\r\n    if (nextProps.location !== (this.props as any).location) {\r\n      this.props.endOfRedirectAction();\r\n      this.setState({ endOfRedirectDetected: true });\r\n    } else {\r\n      this.setState({ endOfRedirectDetected: false });\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.props.router.hasToRedirect || this.state.endOfRedirectDetected) return <Fragment />;\r\n    switch (this.props.router.page) {\r\n      case PageType.SearchPage:\r\n        return <Redirect to=\"/\" />;\r\n      case PageType.DetailsPage:\r\n        const packageName = this.props.router.packageName;\r\n        return <Redirect to={`/details/${packageName}`} />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxState) => state;\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return { ...bindActionCreators({ endOfRedirectAction }, dispatch) };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RouteRedirect) as any) as any;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageDetailsGraph.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport { ForceGraph2D } from 'react-force-graph';\r\n\r\nimport { fetchMultiplePackagesDetailsAction } from '../../redux/actions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\r\nimport { DependenciesStatus } from '../../redux/reducers/details';\r\n\r\ntype ComponentProps = {\r\n  packageName: string;\r\n};\r\ntype State = {\r\n  data?: {\r\n    nodes: { label: string; color: string }[];\r\n    links: { source: string; target: string }[];\r\n  };\r\n  total: number;\r\n  numLoading: number;\r\n  width: number;\r\n};\r\n\r\ntype Props = ComponentProps & StateProps & DispatchProps;\r\n\r\nclass PackageDetailsGraph extends React.Component<Props, State> {\r\n  static DefaultWidth = 800;\r\n  static DefaultHeight = 600;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { ...this.computeState(this.props), width: window.innerWidth };\r\n  }\r\n  computeState(props: Props) {\r\n    const nodes: { label: string; color: string }[] = [];\r\n    const links: { source: string; target: string }[] = [];\r\n    const unscanned: string[] = [];\r\n    let ready = true;\r\n\r\n    let total = 0;\r\n    let numLoading = 0;\r\n    const antiDuplicates: { [packageName: string]: true } =\r\n      props.packageName != null ? { [props.packageName]: true } : {};\r\n    const unvisited: { name: string; depth: number }[] =\r\n      props.packageName != null ? [{ name: props.packageName, depth: 0 }] : [];\r\n    while (unvisited.length > 0) {\r\n      ++total;\r\n      const { name: currentPackage, depth } = unvisited.pop()!;\r\n      const deps = props.knownDependencies[currentPackage];\r\n      if (deps == null) {\r\n        nodes.push({ color: 'black', label: currentPackage });\r\n        unscanned.push(currentPackage);\r\n        ready = false;\r\n        continue;\r\n      }\r\n      switch (deps.status) {\r\n        case DependenciesStatus.Error:\r\n          nodes.push({ color: 'red', label: currentPackage });\r\n          break;\r\n        case DependenciesStatus.OnGoing:\r\n          nodes.push({ color: 'green', label: currentPackage });\r\n          ++numLoading;\r\n          ready = false;\r\n          break;\r\n        case DependenciesStatus.Success:\r\n        default:\r\n          const f = Math.min(64 * depth, 255 - 64);\r\n          const fstring = f < 16 ? `0${f.toString(16)}` : f.toString(16);\r\n          nodes.push({ color: `#${fstring}${fstring}ff`, label: currentPackage });\r\n          break;\r\n      }\r\n      for (const requirement of deps.dependencies) {\r\n        links.push({ target: currentPackage, source: requirement });\r\n        if (!antiDuplicates[requirement]) {\r\n          unvisited.push({ name: requirement, depth: depth + 1 });\r\n          antiDuplicates[requirement] = true;\r\n        }\r\n      }\r\n    }\r\n    if (unscanned.length > 0) {\r\n      console.warn(`Asking some more packages: `, unscanned);\r\n      this.props.fetchMultiplePackagesDetailsAction(unscanned);\r\n    }\r\n    return ready ? { data: { nodes, links }, total, numLoading } : { total, numLoading };\r\n  }\r\n  componentWillReceiveProps(nextProps: Props) {\r\n    const state = { ...this.state, ...this.computeState(nextProps) };\r\n    if (JSON.stringify(this.state) !== JSON.stringify(state)) {\r\n      this.setState(state);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.data == null) {\r\n      return (\r\n        <Fragment>\r\n          <CircularProgress />\r\n          <div>Currently loading {this.state.numLoading} package(s)...</div>\r\n          <div>Over {this.state.total} detected</div>\r\n        </Fragment>\r\n      );\r\n    }\r\n    const nodes = this.state.data.nodes.map(n => ({ id: n.label, color: n.color }));\r\n    const links = this.state.data.links;\r\n    const width =\r\n      this.state.width >= PackageDetailsGraph.DefaultWidth ? PackageDetailsGraph.DefaultWidth : this.state.width;\r\n    const height = Math.floor((width * PackageDetailsGraph.DefaultHeight) / PackageDetailsGraph.DefaultWidth);\r\n    return (\r\n      <div className=\"package-details\">\r\n        <h2>\r\n          {this.props.packageName} ({this.state.data.nodes.length} packages)\r\n        </h2>\r\n        <div className=\"package-force-directed\">\r\n          <div style={{ textAlign: 'left', display: 'inline-block', width: `${width}px` }}>\r\n            <ForceGraph2D\r\n              graphData={{ nodes, links }}\r\n              nodeLabel=\"id\"\r\n              width={width}\r\n              height={height}\r\n              linkDirectionalParticles={1}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState) {\r\n  return {\r\n    knownDependencies: state.details.knownDependencies\r\n  };\r\n}\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return { ...bindActionCreators({ fetchMultiplePackagesDetailsAction }, dispatch) };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageDetailsGraph);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FloatingMenu.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport { redirectToPageAction } from '../../redux/actions';\r\nimport { Fab } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport Search from '@material-ui/icons/Search';\r\nimport { PageType } from '../../redux/reducers/router';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = {};\r\n\r\nclass FloatingMenu extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <div id=\"floating-menu\">\r\n        <Fab color=\"primary\" onClick={() => this.props.redirectToPageAction({ page: PageType.SearchPage })}>\r\n          <Search />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxState) => ({});\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\r\n  ...bindActionCreators({ redirectToPageAction }, dispatch)\r\n});\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FloatingMenu);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport SearchPage from './components/SearchPage';\nimport DetailsPage from './components/DetailsPage';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div id=\"main\">\n        <h1>Package Analyzer</h1>\n        <Route exact path=\"/\" component={SearchPage} />\n        <Route path=\"/details/:package\" component={DetailsPage} />\n      </div>\n    </Router>\n  </Provider>,\n  rootElement\n);\n","import React, { Fragment } from 'react';\r\nimport PackageSelector from './search/PackageSelector';\r\nimport RouteRedirect from './router/RouteRedirect';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <RouteRedirect />\r\n    <PackageSelector />\r\n  </Fragment>\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport PackageDetailsGraph from './details/PackageDetailsGraph';\r\nimport RouteRedirect from './router/RouteRedirect';\r\nimport FloatingMenu from './router/FloatingMenu';\r\n\r\ntype MatchType = { params: { package: string } };\r\ntype PropsType = { match: MatchType };\r\n\r\nexport default (props: PropsType) => (\r\n  <Fragment>\r\n    <RouteRedirect />\r\n    <FloatingMenu />\r\n    <PackageDetailsGraph packageName={props.match.params.package} />\r\n  </Fragment>\r\n);\r\n"],"sourceRoot":""}