{"version":3,"sources":["redux/reducers/packageDetails.tsx","redux/actionTypes.tsx","redux/reducers/index.tsx","redux/actions.tsx","redux/sagas/PackageApi.tsx","redux/sagas/index.tsx","redux/store.tsx","components/search/QueryError.tsx","components/search/PackageQueryResult.tsx","components/search/QueryResults.tsx","components/search/PackageSelector.tsx","components/router/RouteRedirect.tsx","components/details/PackageDetailsGraph.tsx","components/router/FloatingMenu.tsx","index.tsx","components/SearchPage.tsx","components/DetailsPage.tsx"],"names":["DependenciesStatus","FETCH_PACKAGES_LIST","FETCH_MULTIPLE_PACKAGES_DETAILS","initialState","suggestions","query","results","knownDependencies","hasToRedirect","combined","combineReducers","packageDetails","state","arguments","length","undefined","action","type","_ref$payload","payload","searchResults","Object","objectSpread","_ref2$payload","error","packageDetailsMode","packageName","packages","newDeps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","status","OnGoing","dependencies","err","return","_ref5$payload","deps","defineProperty","Success","keys","collected","metadata","_ref6$payload","Error","statusText","fetchPackagesListAction","numResults","updatePackagesListAction","errorPackagesListAction","switchToSearchModeAction","switchToPackageDetailsModeAction","endOfRedirectAction","fetchMultiplePackagesDetailsAction","startMultiplePackagesDetailsAction","updatePackageDetailsAction","errorPackageDetailsAction","PackageApi","classCallCheck","this","createClass","key","_deps","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","concat","encodeURIComponent","fetch","sent","ok","json","abrupt","stop","_x","apply","_list","_callee2","num","_context2","_x2","_x3","fetchPackagesList","fetchMultiplePackagesDetails","rootSaga","_action$payload","call","list","put","t0","message","String","_marked","_loop","_context3","depsDetails","delegateYield","t1","finish","_marked2","_context4","takeLatest","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","QueryError","_this","react_default","createElement","className","props","Button_default","variant","onClick","retry","Refresh_default","React","Component","PackageQueryResult","package","name","authorName","author","scores","score","detail","adjustedScores","maintenance","Math","round","popularity","quality","Card_default","select","CardHeader_default","avatar","Avatar_default","aria-label","title","subheader","version","CardContent_default","Typography_default","color","gutterBottom","component","description","QueryResults","id","map","r","components_search_PackageQueryResult","searchScore","selectPackage","PackageSelector","_React$Component","possibleConstructorReturn","getPrototypeOf","currentQuery","inherits","NumResultsPerQuery","event","currentTarget","setState","fetchQuery","_this2","adornmentIcon","Http_default","Done_default","Error_default","TextField_default","label","onChange","InputProps","endAdornment","InputAdornment_default","position","components_search_QueryResults","openPackage","components_search_QueryError","connect","dispatch","bindActionCreators","RouteRedirect","endOfRedirectDetected","nextProps","location","react","Redirect","to","withRouter","PackageDetailsGraph","computeState","width","window","innerWidth","nodes","links","unscanned","ready","total","numLoading","antiDuplicates","unvisited","currentPackage","pop","push","requirement","target","source","console","warn","data","JSON","stringify","CircularProgress_default","n","DefaultWidth","height","floor","DefaultHeight","style","textAlign","display","react_force_graph_module","graphData","nodeLabel","linkDirectionalParticles","FloatingMenu","index_es","mini","Search_default","rootElement","document","getElementById","ReactDOM","render","es","store","HashRouter","Route","exact","path","router_RouteRedirect","components_search_PackageSelector","components_router_FloatingMenu","components_details_PackageDetailsGraph","match","params"],"mappings":"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","file":"static/js/main.f6e7f464.chunk.js","sourcesContent":["import {\r\n  Actions,\r\n  ActionUpdatePackagesList,\r\n  ActionErrorPackagesList,\r\n  ActionSwitchToPackageDetailsMode,\r\n  ActionStartMultiplePackagesDetails,\r\n  ActionUpdatePackageDetails,\r\n  ActionErrorPackageDetails\r\n} from '../actions';\r\nimport { PackageSearchResult } from '../sagas/PackageApi';\r\nimport {\r\n  UPDATE_PACKAGES_LIST,\r\n  ERROR_PACKAGES_LIST,\r\n  SWITCH_TO_PACKAGE_DETAILS,\r\n  UPDATE_PACKAGE_DETAILS,\r\n  ERROR_PACKAGE_DETAILS,\r\n  START_MULTIPLE_PACKAGES_DETAILS,\r\n  SWITCH_TO_SEARCH_MODE,\r\n  END_OF_REDIRECT\r\n} from '../actionTypes';\r\n\r\nexport enum DependenciesStatus {\r\n  OnGoing = -1,\r\n  Error = 0,\r\n  Success = 1\r\n}\r\nexport type PackageDescription = {\r\n  status: DependenciesStatus;\r\n  statusText?: string;\r\n  dependencies: string[];\r\n};\r\nexport type KnownDependencies = { [packageName: string]: PackageDescription };\r\nexport type PackageDetailsState = {\r\n  suggestions: {\r\n    query: string;\r\n    results: PackageSearchResult[];\r\n    error?: string;\r\n  };\r\n  packageDetailsMode?: string;\r\n  knownDependencies: KnownDependencies;\r\n  hasToRedirect: boolean;\r\n};\r\nconst initialState: PackageDetailsState = {\r\n  suggestions: {\r\n    query: '',\r\n    results: []\r\n  },\r\n  knownDependencies: {},\r\n  hasToRedirect: false\r\n};\r\n\r\nexport default function(state = initialState, action: Actions) {\r\n  switch (action.type) {\r\n    case UPDATE_PACKAGES_LIST: {\r\n      const {\r\n        payload: { query, searchResults }\r\n      } = action as ActionUpdatePackagesList;\r\n      return { ...state, suggestions: { query, results: searchResults } };\r\n    }\r\n    case ERROR_PACKAGES_LIST: {\r\n      const {\r\n        payload: { query, error }\r\n      } = action as ActionErrorPackagesList;\r\n      return { ...state, suggestions: { query, results: [], error } };\r\n    }\r\n    case SWITCH_TO_SEARCH_MODE: {\r\n      return { ...state, hasToRedirect: true, packageDetailsMode: undefined };\r\n    }\r\n    case SWITCH_TO_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName }\r\n      } = action as ActionSwitchToPackageDetailsMode;\r\n      return { ...state, hasToRedirect: true, packageDetailsMode: packageName };\r\n    }\r\n    case END_OF_REDIRECT: {\r\n      return { ...state, hasToRedirect: false };\r\n    }\r\n    case START_MULTIPLE_PACKAGES_DETAILS: {\r\n      const {\r\n        payload: { packages }\r\n      } = action as ActionStartMultiplePackagesDetails;\r\n      const newDeps: KnownDependencies = {};\r\n      for (const packageName of packages) {\r\n        newDeps[packageName] = { status: DependenciesStatus.OnGoing, dependencies: [] };\r\n      }\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          ...newDeps\r\n        }\r\n      };\r\n    }\r\n    case UPDATE_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName, deps }\r\n      } = action as ActionUpdatePackageDetails;\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          [packageName]: {\r\n            status: DependenciesStatus.Success,\r\n            dependencies: Object.keys(deps.collected.metadata.dependencies || [])\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case ERROR_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName, error }\r\n      } = action as ActionErrorPackageDetails;\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          [packageName]: { status: DependenciesStatus.Error, statusText: error, dependencies: [] }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const FETCH_PACKAGES_LIST = 'FETCH_PACKAGES_LIST';\r\nexport const UPDATE_PACKAGES_LIST = 'UPDATE_PACKAGES_LIST';\r\nexport const ERROR_PACKAGES_LIST = 'ERROR_PACKAGES_LIST';\r\nexport const SWITCH_TO_SEARCH_MODE = 'SWITCH_TO_SEARCH_MODE';\r\nexport const SWITCH_TO_PACKAGE_DETAILS = 'SWITCH_TO_PACKAGE_DETAILS';\r\nexport const END_OF_REDIRECT = 'END_OF_REDIRECT';\r\nexport const FETCH_MULTIPLE_PACKAGES_DETAILS = 'FETCH_MULTIPLE_PACKAGES_DETAILS';\r\nexport const START_MULTIPLE_PACKAGES_DETAILS = 'START_MULTIPLE_PACKAGES_DETAILS';\r\nexport const UPDATE_PACKAGE_DETAILS = 'UPDATE_PACKAGE_DETAILS';\r\nexport const ERROR_PACKAGE_DETAILS = 'ERROR_PACKAGE_DETAILS';\r\n","import { combineReducers, Reducer } from 'redux';\r\nimport packageDetails from './packageDetails';\r\n\r\nconst combined = combineReducers({ packageDetails });\r\nexport default combined;\r\nexport type ReduxState = (typeof combined) extends Reducer<infer U> ? U : never;\r\n","import {\r\n  FETCH_PACKAGES_LIST,\r\n  UPDATE_PACKAGES_LIST,\r\n  ERROR_PACKAGES_LIST,\r\n  SWITCH_TO_PACKAGE_DETAILS,\r\n  UPDATE_PACKAGE_DETAILS,\r\n  ERROR_PACKAGE_DETAILS,\r\n  FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  START_MULTIPLE_PACKAGES_DETAILS,\r\n  SWITCH_TO_SEARCH_MODE,\r\n  END_OF_REDIRECT\r\n} from './actionTypes';\r\nimport { PackagesList, Deps } from './sagas/PackageApi';\r\n\r\nexport const fetchPackagesListAction = (query: string, numResults: number) => ({\r\n  type: FETCH_PACKAGES_LIST,\r\n  payload: { query, numResults }\r\n});\r\nexport const updatePackagesListAction = (query: string, searchResults: PackagesList) => ({\r\n  type: UPDATE_PACKAGES_LIST,\r\n  payload: { query, searchResults }\r\n});\r\nexport const errorPackagesListAction = (query: string, error: string) => ({\r\n  type: ERROR_PACKAGES_LIST,\r\n  payload: { query, error }\r\n});\r\nexport const switchToSearchModeAction = () => ({\r\n  type: SWITCH_TO_SEARCH_MODE,\r\n  payload: {}\r\n});\r\nexport const switchToPackageDetailsModeAction = (packageName: string) => ({\r\n  type: SWITCH_TO_PACKAGE_DETAILS,\r\n  payload: { packageName }\r\n});\r\nexport const endOfRedirectAction = () => ({\r\n  type: END_OF_REDIRECT,\r\n  payload: {}\r\n});\r\nexport const fetchMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const startMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: START_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const updatePackageDetailsAction = (packageName: string, deps: Deps) => ({\r\n  type: UPDATE_PACKAGE_DETAILS,\r\n  payload: { packageName, deps }\r\n});\r\nexport const errorPackageDetailsAction = (packageName: string, error: string) => ({\r\n  type: ERROR_PACKAGE_DETAILS,\r\n  payload: { packageName, error }\r\n});\r\n\r\nexport type ActionFetchPackagesList = ReturnType<typeof fetchPackagesListAction>;\r\nexport type ActionUpdatePackagesList = ReturnType<typeof updatePackagesListAction>;\r\nexport type ActionErrorPackagesList = ReturnType<typeof errorPackagesListAction>;\r\nexport type ActionSwitchToSearchMode = ReturnType<typeof switchToSearchModeAction>;\r\nexport type ActionSwitchToPackageDetailsMode = ReturnType<typeof switchToPackageDetailsModeAction>;\r\nexport type ActionEndOfRedirect = ReturnType<typeof endOfRedirectAction>;\r\nexport type ActionFetchMultiplePackagesDetails = ReturnType<typeof fetchMultiplePackagesDetailsAction>;\r\nexport type ActionStartMultiplePackagesDetails = ReturnType<typeof startMultiplePackagesDetailsAction>;\r\nexport type ActionUpdatePackageDetails = ReturnType<typeof updatePackageDetailsAction>;\r\nexport type ActionErrorPackageDetails = ReturnType<typeof errorPackageDetailsAction>;\r\nexport type Actions =\r\n  | ActionFetchPackagesList\r\n  | ActionUpdatePackagesList\r\n  | ActionErrorPackagesList\r\n  | ActionSwitchToSearchMode\r\n  | ActionSwitchToPackageDetailsMode\r\n  | ActionEndOfRedirect\r\n  | ActionFetchMultiplePackagesDetails\r\n  | ActionStartMultiplePackagesDetails\r\n  | ActionUpdatePackageDetails\r\n  | ActionErrorPackageDetails;\r\n","export type Deps = {\r\n  collected: {\r\n    metadata: {\r\n      dependencies?: { [packageName: string]: string };\r\n    };\r\n  };\r\n};\r\nexport type PackageSearchResult = {\r\n  package: {\r\n    author?: {\r\n      name: string;\r\n      email: string;\r\n    };\r\n    date: string;\r\n    name: string;\r\n    description: string;\r\n    version: string;\r\n    keywords?: string[];\r\n    links: {\r\n      bugs?: string;\r\n      homepage?: string;\r\n      npm?: string;\r\n      repository?: string;\r\n    };\r\n  };\r\n  score: {\r\n    detail: {\r\n      maintenance: number;\r\n      popularity: number;\r\n      quality: number;\r\n    };\r\n    final: number;\r\n  };\r\n  searchScore: number;\r\n};\r\nexport type PackagesList = PackageSearchResult[];\r\n\r\nexport class PackageApi {\r\n  static async deps(packageName: string) {\r\n    const url = `https://api.npms.io/v2/package/${encodeURIComponent(packageName)}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as Deps;\r\n  }\r\n  static async list(query: string, num: number) {\r\n    if (query.length === 0) {\r\n      return [];\r\n    }\r\n    const url = `https://api.npms.io/v2/search/suggestions?q=${encodeURIComponent(query)}&size=${num}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as PackagesList;\r\n  }\r\n}\r\n","import { SagaIterator } from 'redux-saga';\r\nimport { takeLatest, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { FETCH_PACKAGES_LIST, FETCH_MULTIPLE_PACKAGES_DETAILS } from '../actionTypes';\r\nimport {\r\n  ActionFetchPackagesList,\r\n  updatePackagesListAction,\r\n  errorPackagesListAction,\r\n  ActionFetchMultiplePackagesDetails,\r\n  updatePackageDetailsAction,\r\n  errorPackageDetailsAction,\r\n  startMultiplePackagesDetailsAction\r\n} from '../actions';\r\nimport { PackageApi, PackagesList, Deps } from './PackageApi';\r\n\r\nfunction* fetchPackagesList(action: ActionFetchPackagesList) {\r\n  const {\r\n    payload: { query, numResults }\r\n  } = action;\r\n  try {\r\n    const searchResults: PackagesList = yield call(() => PackageApi.list(query, numResults));\r\n    yield put(updatePackagesListAction(query, searchResults));\r\n  } catch (error) {\r\n    yield put(errorPackagesListAction(query, (error as any).message || String(error)));\r\n  }\r\n}\r\n\r\nfunction* fetchMultiplePackagesDetails(action: ActionFetchMultiplePackagesDetails) {\r\n  const {\r\n    payload: { packages }\r\n  } = action;\r\n  yield put(startMultiplePackagesDetailsAction(packages));\r\n  for (const packageName of packages) {\r\n    try {\r\n      const depsDetails: Deps = yield call(() => PackageApi.deps(packageName));\r\n      yield put(updatePackageDetailsAction(packageName, depsDetails));\r\n    } catch (error) {\r\n      yield put(errorPackageDetailsAction(packageName, (error as any).message || String(error)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga(): SagaIterator {\r\n  yield takeLatest(FETCH_PACKAGES_LIST, fetchPackagesList);\r\n  yield takeEvery(FETCH_MULTIPLE_PACKAGES_DETAILS, fetchMultiplePackagesDetails);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\r\n\r\nimport './QueryError.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\n\r\ninterface Props {\r\n  error: string;\r\n  retry: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryError extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <div className=\"query-error\">\r\n        <p>Query failed with error: {this.props.error}</p>\r\n        <Button variant=\"contained\" onClick={() => this.props.retry()}>\r\n          Retry <Refresh />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryError;\r\n","import React from 'react';\r\n\r\nimport './PackageQueryResult.css';\r\nimport { PackageSearchResult } from '../../redux/sagas/PackageApi';\r\nimport Card from '@material-ui/core/Card/Card';\r\nimport CardContent from '@material-ui/core/CardContent/CardContent';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar/Avatar';\r\n\r\ninterface Props {\r\n  package: PackageSearchResult['package'];\r\n  score: PackageSearchResult['score'];\r\n  searchScore: PackageSearchResult['searchScore'];\r\n  select: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass PackageQueryResult extends React.Component<Props, State> {\r\n  render() {\r\n    const packageName = this.props.package.name;\r\n    const authorName = this.props.package.author ? this.props.package.author.name : 'N.A';\r\n    const scores = this.props.score.detail;\r\n    const adjustedScores = {\r\n      maintenance: Math.round(5 * scores.maintenance),\r\n      popularity: Math.round(5 * scores.popularity),\r\n      quality: Math.round(5 * scores.quality)\r\n    };\r\n    return (\r\n      <Card className=\"package-card\" onClick={() => this.props.select()}>\r\n        <CardHeader\r\n          className=\"card-header\"\r\n          avatar={\r\n            <Avatar className=\"card-avatar\" aria-label={packageName}>\r\n              {packageName[0] || ''}\r\n            </Avatar>\r\n          }\r\n          title={packageName}\r\n          subheader={this.props.package.version}\r\n        />\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {authorName}\r\n          </Typography>\r\n          <Typography component=\"p\">{this.props.package.description}</Typography>\r\n          <div className=\"package-scores\">\r\n            <Avatar title=\"maintenance [0-5]\" className={`package-score-${adjustedScores.maintenance}`}>\r\n              {adjustedScores.maintenance}\r\n            </Avatar>\r\n            <Avatar title=\"popularity [0-5]\" className={`package-score-${adjustedScores.popularity}`}>\r\n              {adjustedScores.popularity}\r\n            </Avatar>\r\n            <Avatar title=\"quality [0-5]\" className={`package-score-${adjustedScores.quality}`}>\r\n              {adjustedScores.quality}\r\n            </Avatar>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PackageQueryResult;\r\n","import React from 'react';\r\n\r\nimport './QueryResults.css';\r\nimport { PackageSearchResult } from '../../redux/sagas/PackageApi';\r\nimport PackageQueryResult from './PackageQueryResult';\r\n\r\ninterface Props {\r\n  query: string;\r\n  results: PackageSearchResult[];\r\n  selectPackage: (packageName: string) => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryResults extends React.Component<Props, State> {\r\n  render() {\r\n    const id = 'query-results';\r\n    if (this.props.query.length === 0) {\r\n      return <div id={id} />;\r\n    }\r\n    if (this.props.results.length === 0) {\r\n      return (\r\n        <div id={id}>\r\n          <p>No results</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id={id}>\r\n        <div className=\"query-results-cards\">\r\n          <ul>\r\n            {this.props.results.map((r, key) => (\r\n              <li key={`li-${key}`}>\r\n                <PackageQueryResult\r\n                  key={key}\r\n                  package={r.package}\r\n                  score={r.score}\r\n                  searchScore={r.searchScore}\r\n                  select={() => this.props.selectPackage(r.package.name)}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryResults;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageSelector.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  fetchPackagesListAction,\r\n  switchToPackageDetailsModeAction,\r\n  switchToSearchModeAction\r\n} from '../../redux/actions';\r\nimport QueryError from './QueryError';\r\nimport QueryResults from './QueryResults';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\r\nimport Http from '@material-ui/icons/Http';\r\nimport Error from '@material-ui/icons/Error';\r\nimport Done from '@material-ui/icons/Done';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = { currentQuery: string };\r\n\r\nexport class PackageSelector extends React.Component<Props, State> {\r\n  static NumResultsPerQuery = 9;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { currentQuery: props.query };\r\n  }\r\n  fetchQuery(query: string) {\r\n    this.props.fetchPackagesListAction(query, PackageSelector.NumResultsPerQuery);\r\n  }\r\n  fetch(event: ChangeEvent<HTMLInputElement>) {\r\n    const query = event.currentTarget.value;\r\n    this.setState({ currentQuery: query });\r\n    this.fetchQuery(query);\r\n  }\r\n  openPackage(packageName: string) {\r\n    this.props.switchToPackageDetailsModeAction(packageName);\r\n  }\r\n  render() {\r\n    const adornmentIcon =\r\n      this.state.currentQuery !== this.props.query ? <Http /> : this.props.error == null ? <Done /> : <Error />;\r\n    return (\r\n      <div id=\"package-selector\">\r\n        <TextField\r\n          id=\"package-name-input\"\r\n          label=\"Package Name\"\r\n          variant=\"outlined\"\r\n          onChange={(event: ChangeEvent<HTMLInputElement>) => this.fetch(event)}\r\n          value={this.state.currentQuery}\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"start\">{adornmentIcon}</InputAdornment>\r\n          }}\r\n        />\r\n        {this.props.error == null ? (\r\n          <QueryResults\r\n            query={this.props.query}\r\n            results={this.props.results}\r\n            selectPackage={(packageName: string) => this.openPackage(packageName)}\r\n          />\r\n        ) : (\r\n          <QueryError error={this.props.error} retry={() => this.fetchQuery(this.state.currentQuery)} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState) {\r\n  return { ...state.packageDetails.suggestions };\r\n}\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return {\r\n    ...bindActionCreators({ fetchPackagesListAction, switchToPackageDetailsModeAction }, dispatch)\r\n  };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageSelector);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { Dispatch, Action, bindActionCreators } from 'redux';\r\nimport { endOfRedirectAction } from '../../redux/actions';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = { endOfRedirectDetected: boolean };\r\n\r\nexport class RouteRedirect extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { endOfRedirectDetected: false };\r\n  }\r\n  componentWillReceiveProps(nextProps: any) {\r\n    if (nextProps.location !== (this.props as any).location) {\r\n      this.props.endOfRedirectAction();\r\n      this.setState({ endOfRedirectDetected: true });\r\n    } else {\r\n      this.setState({ endOfRedirectDetected: false });\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.props.packageDetails.hasToRedirect || this.state.endOfRedirectDetected) return <Fragment />;\r\n    const packageName = this.props.packageDetails.packageDetailsMode;\r\n    if (packageName == null) return <Redirect to=\"/\" />;\r\n    return <Redirect to={`/details/${packageName}`} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxState) => state;\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return { ...bindActionCreators({ endOfRedirectAction }, dispatch) };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RouteRedirect) as any) as any;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageDetailsGraph.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport { ForceGraph2D } from 'react-force-graph';\r\n\r\nimport { DependenciesStatus } from '../../redux/reducers/packageDetails';\r\nimport { fetchMultiplePackagesDetailsAction } from '../../redux/actions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\r\n\r\ninterface Props extends StateProps, DispatchProps {\r\n  packageName: string;\r\n}\r\ntype State = {\r\n  data?: {\r\n    nodes: { label: string; color: string }[];\r\n    links: { source: string; target: string }[];\r\n  };\r\n  total: number;\r\n  numLoading: number;\r\n  width: number;\r\n};\r\n\r\nclass PackageDetailsGraph extends React.Component<Props, State> {\r\n  static DefaultWidth = 800;\r\n  static DefaultHeight = 600;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { ...this.computeState(this.props), width: window.innerWidth };\r\n  }\r\n  computeState(props: Props) {\r\n    const nodes: { label: string; color: string }[] = [];\r\n    const links: { source: string; target: string }[] = [];\r\n    const unscanned: string[] = [];\r\n    let ready = true;\r\n\r\n    let total = 0;\r\n    let numLoading = 0;\r\n    const antiDuplicates: { [packageName: string]: true } =\r\n      props.packageName != null ? { [props.packageName]: true } : {};\r\n    const unvisited = props.packageName != null ? [props.packageName] : [];\r\n    while (unvisited.length > 0) {\r\n      ++total;\r\n      const currentPackage = unvisited.pop()!;\r\n      const deps = props.knownDependencies[currentPackage];\r\n      if (deps == null) {\r\n        nodes.push({ color: 'black', label: currentPackage });\r\n        unscanned.push(currentPackage);\r\n        ready = false;\r\n        continue;\r\n      }\r\n      switch (deps.status) {\r\n        case DependenciesStatus.Error:\r\n          nodes.push({ color: 'red', label: currentPackage });\r\n          break;\r\n        case DependenciesStatus.OnGoing:\r\n          nodes.push({ color: 'green', label: currentPackage });\r\n          ++numLoading;\r\n          ready = false;\r\n          break;\r\n        case DependenciesStatus.Success:\r\n        default:\r\n          nodes.push({ color: 'blue', label: currentPackage });\r\n          break;\r\n      }\r\n      for (const requirement of deps.dependencies) {\r\n        links.push({ target: currentPackage, source: requirement });\r\n        if (!antiDuplicates[requirement]) {\r\n          unvisited.push(requirement);\r\n          antiDuplicates[requirement] = true;\r\n        }\r\n      }\r\n    }\r\n    if (unscanned.length > 0) {\r\n      console.warn(`Asking some more packages: `, unscanned);\r\n      this.props.fetchMultiplePackagesDetailsAction(unscanned);\r\n    }\r\n    return ready ? { data: { nodes, links }, total, numLoading } : { total, numLoading };\r\n  }\r\n  componentWillReceiveProps(nextProps: Props) {\r\n    const state = { ...this.state, ...this.computeState(nextProps) };\r\n    if (JSON.stringify(this.state) !== JSON.stringify(state)) {\r\n      this.setState(state);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.packageName == null) {\r\n      return <Fragment />;\r\n    }\r\n    if (this.state.data == null) {\r\n      return (\r\n        <Fragment>\r\n          <CircularProgress />\r\n          <div>Currently loading {this.state.numLoading} package(s)...</div>\r\n          <div>Over {this.state.total} detected</div>\r\n        </Fragment>\r\n      );\r\n    }\r\n    const nodes = this.state.data.nodes.map(n => ({ id: n.label, color: n.color }));\r\n    const links = this.state.data.links;\r\n    const width =\r\n      this.state.width >= PackageDetailsGraph.DefaultWidth ? PackageDetailsGraph.DefaultWidth : this.state.width;\r\n    const height = Math.floor((width * PackageDetailsGraph.DefaultHeight) / PackageDetailsGraph.DefaultWidth);\r\n    return (\r\n      <div className=\"package-details\">\r\n        <h2>\r\n          {this.props.packageName} ({this.state.data.nodes.length} packages)\r\n        </h2>\r\n        <div className=\"package-force-directed\">\r\n          <div style={{ textAlign: 'left', display: 'inline-block', width: `${width}px` }}>\r\n            <ForceGraph2D\r\n              graphData={{ nodes, links }}\r\n              nodeLabel=\"id\"\r\n              width={width}\r\n              height={height}\r\n              linkDirectionalParticles={1}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState) {\r\n  return {\r\n    knownDependencies: state.packageDetails.knownDependencies\r\n  };\r\n}\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return { ...bindActionCreators({ fetchMultiplePackagesDetailsAction }, dispatch) };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageDetailsGraph);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './FloatingMenu.css';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport { switchToSearchModeAction } from '../../redux/actions';\r\nimport { Button } from '@material-ui/core';\r\nimport Search from '@material-ui/icons/Search';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = {};\r\n\r\nclass FloatingMenu extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <div id=\"floating-menu\">\r\n        <Button variant=\"fab\" mini color=\"primary\" onClick={() => this.props.switchToSearchModeAction()}>\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxState) => ({});\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\r\n  ...bindActionCreators({ switchToSearchModeAction }, dispatch)\r\n});\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FloatingMenu);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport SearchPage from './components/SearchPage';\nimport DetailsPage from './components/DetailsPage';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div id=\"main\">\n        <h1>Package Analyzer</h1>\n        <Route exact path=\"/\" component={SearchPage} />\n        <Route path=\"/details/:package\" component={DetailsPage} />\n      </div>\n    </Router>\n  </Provider>,\n  rootElement\n);\n","import React, { Fragment } from 'react';\r\nimport PackageSelector from './search/PackageSelector';\r\nimport RouteRedirect from './router/RouteRedirect';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <RouteRedirect />\r\n    <PackageSelector />\r\n  </Fragment>\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport PackageDetailsGraph from './details/PackageDetailsGraph';\r\nimport RouteRedirect from './router/RouteRedirect';\r\nimport FloatingMenu from './router/FloatingMenu';\r\n\r\ntype MatchType = { params: { package: string } };\r\ntype PropsType = { match: MatchType };\r\n\r\nexport default (props: PropsType) => (\r\n  <Fragment>\r\n    <RouteRedirect />\r\n    <FloatingMenu />\r\n    <PackageDetailsGraph packageName={props.match.params.package} />\r\n  </Fragment>\r\n);\r\n"],"sourceRoot":""}