{"version":3,"sources":["redux/reducers/packageDetails.tsx","redux/actionTypes.tsx","redux/reducers/index.tsx","redux/actions.tsx","redux/sagas/PackageApi.tsx","redux/sagas/index.tsx","redux/store.tsx","components/QueryError.tsx","components/PackageQueryResult.tsx","components/QueryResults.tsx","components/PackageSelector.tsx","components/PackageDetailsGraph.tsx","App.tsx","index.tsx"],"names":["DependenciesStatus","FETCH_PACKAGES_LIST","FETCH_MULTIPLE_PACKAGES_DETAILS","initialState","suggestions","query","results","knownDependencies","combined","combineReducers","packageDetails","state","arguments","length","undefined","action","type","_ref$payload","payload","searchResults","Object","objectSpread","_ref2$payload","error","packageDetailsMode","packageName","packages","newDeps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","status","OnGoing","dependencies","err","return","_ref5$payload","deps","defineProperty","Success","keys","collected","metadata","_ref6$payload","Error","statusText","fetchPackagesListAction","numResults","updatePackagesListAction","errorPackagesListAction","switchToSearchModeAction","switchToPackageDetailsModeAction","fetchMultiplePackagesDetailsAction","startMultiplePackagesDetailsAction","updatePackageDetailsAction","errorPackageDetailsAction","PackageApi","classCallCheck","this","createClass","key","_deps","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","concat","encodeURIComponent","fetch","sent","ok","json","abrupt","stop","_x","apply","_list","_callee2","num","_context2","_x2","_x3","fetchPackagesList","fetchMultiplePackagesDetails","rootSaga","_action$payload","call","list","put","t0","message","String","_marked","_loop","_context3","depsDetails","delegateYield","t1","finish","_marked2","_context4","takeLatest","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","QueryError","_this","react_default","createElement","className","props","Button_default","variant","onClick","retry","Refresh_default","React","Component","PackageQueryResult","package","name","authorName","author","scores","score","detail","adjustedScores","maintenance","Math","round","popularity","quality","Card_default","select","CardHeader_default","avatar","Avatar_default","aria-label","title","subheader","version","CardContent_default","Typography_default","color","gutterBottom","component","description","QueryResults","id","map","r","src_components_PackageQueryResult","searchScore","selectPackage","PackageSelector","_React$Component","possibleConstructorReturn","getPrototypeOf","currentQuery","inherits","fullSize","NumResultsPerQuery","event","currentTarget","setState","fetchQuery","_this2","adornmentIcon","Http_default","Done_default","Error_default","TextField_default","label","onChange","InputProps","endAdornment","InputAdornment_default","position","src_components_QueryResults","openPackage","src_components_QueryError","connect","dispatch","bindActionCreators","PackageDetailsGraph","computeState","nodes","links","unscanned","ready","antiDuplicates","unvisited","currentPackage","pop","push","requirement","target","source","console","warn","data","nextProps","JSON","stringify","node","log","n","react_force_graph_module","graphData","nodeLabel","width","height","linkDirectionalParticles","App","src_components_PackageSelector","src_components_PackageDetailsGraph","rootElement","document","getElementById","ReactDOM","render","es","store","src_App_0"],"mappings":"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","file":"static/js/main.94f1b81b.chunk.js","sourcesContent":["import {\r\n  Actions,\r\n  ActionUpdatePackagesList,\r\n  ActionErrorPackagesList,\r\n  ActionSwitchToPackageDetailsMode,\r\n  ActionStartMultiplePackagesDetails,\r\n  ActionUpdatePackageDetails,\r\n  ActionErrorPackageDetails\r\n} from '../actions';\r\nimport { PackageSearchResult } from '../sagas/PackageApi';\r\nimport {\r\n  UPDATE_PACKAGES_LIST,\r\n  ERROR_PACKAGES_LIST,\r\n  SWITCH_TO_PACKAGE_DETAILS,\r\n  UPDATE_PACKAGE_DETAILS,\r\n  ERROR_PACKAGE_DETAILS,\r\n  START_MULTIPLE_PACKAGES_DETAILS,\r\n  SWITCH_TO_SEARCH_MODE\r\n} from '../actionTypes';\r\n\r\nexport enum DependenciesStatus {\r\n  OnGoing = -1,\r\n  Error = 0,\r\n  Success = 1\r\n}\r\nexport type PackageDescription = {\r\n  status: DependenciesStatus;\r\n  statusText?: string;\r\n  dependencies: string[];\r\n};\r\nexport type KnownDependencies = { [packageName: string]: PackageDescription };\r\nexport type PackageDetailsState = {\r\n  suggestions: {\r\n    query: string;\r\n    results: PackageSearchResult[];\r\n    error?: string;\r\n  };\r\n  packageDetailsMode?: string;\r\n  knownDependencies: KnownDependencies;\r\n};\r\nconst initialState: PackageDetailsState = {\r\n  suggestions: {\r\n    query: '',\r\n    results: []\r\n  },\r\n  knownDependencies: {}\r\n};\r\n\r\nexport default function(state = initialState, action: Actions) {\r\n  switch (action.type) {\r\n    case UPDATE_PACKAGES_LIST: {\r\n      const {\r\n        payload: { query, searchResults }\r\n      } = action as ActionUpdatePackagesList;\r\n      return { ...state, suggestions: { query, results: searchResults } };\r\n    }\r\n    case ERROR_PACKAGES_LIST: {\r\n      const {\r\n        payload: { query, error }\r\n      } = action as ActionErrorPackagesList;\r\n      return { ...state, suggestions: { query, results: [], error } };\r\n    }\r\n    case SWITCH_TO_SEARCH_MODE: {\r\n      return { ...state, packageDetailsMode: undefined };\r\n    }\r\n    case SWITCH_TO_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName }\r\n      } = action as ActionSwitchToPackageDetailsMode;\r\n      return { ...state, packageDetailsMode: packageName };\r\n    }\r\n    case START_MULTIPLE_PACKAGES_DETAILS: {\r\n      const {\r\n        payload: { packages }\r\n      } = action as ActionStartMultiplePackagesDetails;\r\n      const newDeps: KnownDependencies = {};\r\n      for (const packageName of packages) {\r\n        newDeps[packageName] = { status: DependenciesStatus.OnGoing, dependencies: [] };\r\n      }\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          ...newDeps\r\n        }\r\n      };\r\n    }\r\n    case UPDATE_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName, deps }\r\n      } = action as ActionUpdatePackageDetails;\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          [packageName]: {\r\n            status: DependenciesStatus.Success,\r\n            dependencies: Object.keys(deps.collected.metadata.dependencies || [])\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case ERROR_PACKAGE_DETAILS: {\r\n      const {\r\n        payload: { packageName, error }\r\n      } = action as ActionErrorPackageDetails;\r\n      return {\r\n        ...state,\r\n        knownDependencies: {\r\n          ...state.knownDependencies,\r\n          [packageName]: { status: DependenciesStatus.Error, statusText: error, dependencies: [] }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const FETCH_PACKAGES_LIST = 'FETCH_PACKAGES_LIST';\r\nexport const UPDATE_PACKAGES_LIST = 'UPDATE_PACKAGES_LIST';\r\nexport const ERROR_PACKAGES_LIST = 'ERROR_PACKAGES_LIST';\r\nexport const SWITCH_TO_SEARCH_MODE = 'SWITCH_TO_SEARCH_MODE';\r\nexport const SWITCH_TO_PACKAGE_DETAILS = 'SWITCH_TO_PACKAGE_DETAILS';\r\nexport const FETCH_MULTIPLE_PACKAGES_DETAILS = 'FETCH_MULTIPLE_PACKAGES_DETAILS';\r\nexport const START_MULTIPLE_PACKAGES_DETAILS = 'START_MULTIPLE_PACKAGES_DETAILS';\r\nexport const UPDATE_PACKAGE_DETAILS = 'UPDATE_PACKAGE_DETAILS';\r\nexport const ERROR_PACKAGE_DETAILS = 'ERROR_PACKAGE_DETAILS';\r\n","import { combineReducers, Reducer } from 'redux';\r\nimport packageDetails from './packageDetails';\r\n\r\nconst combined = combineReducers({ packageDetails });\r\nexport default combined;\r\nexport type ReduxState = (typeof combined) extends Reducer<infer U> ? U : never;\r\n","import {\r\n  FETCH_PACKAGES_LIST,\r\n  UPDATE_PACKAGES_LIST,\r\n  ERROR_PACKAGES_LIST,\r\n  SWITCH_TO_PACKAGE_DETAILS,\r\n  UPDATE_PACKAGE_DETAILS,\r\n  ERROR_PACKAGE_DETAILS,\r\n  FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  START_MULTIPLE_PACKAGES_DETAILS,\r\n  SWITCH_TO_SEARCH_MODE\r\n} from './actionTypes';\r\nimport { PackagesList, Deps } from './sagas/PackageApi';\r\n\r\nexport const fetchPackagesListAction = (query: string, numResults: number) => ({\r\n  type: FETCH_PACKAGES_LIST,\r\n  payload: { query, numResults }\r\n});\r\nexport const updatePackagesListAction = (query: string, searchResults: PackagesList) => ({\r\n  type: UPDATE_PACKAGES_LIST,\r\n  payload: { query, searchResults }\r\n});\r\nexport const errorPackagesListAction = (query: string, error: string) => ({\r\n  type: ERROR_PACKAGES_LIST,\r\n  payload: { query, error }\r\n});\r\nexport const switchToSearchModeAction = () => ({\r\n  type: SWITCH_TO_SEARCH_MODE,\r\n  payload: {}\r\n});\r\nexport const switchToPackageDetailsModeAction = (packageName: string) => ({\r\n  type: SWITCH_TO_PACKAGE_DETAILS,\r\n  payload: { packageName }\r\n});\r\nexport const fetchMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: FETCH_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const startMultiplePackagesDetailsAction = (packages: string[]) => ({\r\n  type: START_MULTIPLE_PACKAGES_DETAILS,\r\n  payload: { packages }\r\n});\r\nexport const updatePackageDetailsAction = (packageName: string, deps: Deps) => ({\r\n  type: UPDATE_PACKAGE_DETAILS,\r\n  payload: { packageName, deps }\r\n});\r\nexport const errorPackageDetailsAction = (packageName: string, error: string) => ({\r\n  type: ERROR_PACKAGE_DETAILS,\r\n  payload: { packageName, error }\r\n});\r\n\r\nexport type ActionFetchPackagesList = ReturnType<typeof fetchPackagesListAction>;\r\nexport type ActionUpdatePackagesList = ReturnType<typeof updatePackagesListAction>;\r\nexport type ActionErrorPackagesList = ReturnType<typeof errorPackagesListAction>;\r\nexport type ActionSwitchToPackageDetailsMode = ReturnType<typeof switchToPackageDetailsModeAction>;\r\nexport type ActionFetchMultiplePackagesDetails = ReturnType<typeof fetchMultiplePackagesDetailsAction>;\r\nexport type ActionStartMultiplePackagesDetails = ReturnType<typeof startMultiplePackagesDetailsAction>;\r\nexport type ActionUpdatePackageDetails = ReturnType<typeof updatePackageDetailsAction>;\r\nexport type ActionErrorPackageDetails = ReturnType<typeof errorPackageDetailsAction>;\r\nexport type Actions =\r\n  | ActionFetchPackagesList\r\n  | ActionUpdatePackagesList\r\n  | ActionErrorPackagesList\r\n  | ActionSwitchToPackageDetailsMode\r\n  | ActionFetchMultiplePackagesDetails\r\n  | ActionStartMultiplePackagesDetails\r\n  | ActionUpdatePackageDetails\r\n  | ActionErrorPackageDetails;\r\n","export type Deps = {\r\n  collected: {\r\n    metadata: {\r\n      dependencies?: { [packageName: string]: string };\r\n    };\r\n  };\r\n};\r\nexport type PackageSearchResult = {\r\n  package: {\r\n    author?: {\r\n      name: string;\r\n      email: string;\r\n    };\r\n    date: string;\r\n    name: string;\r\n    description: string;\r\n    version: string;\r\n    keywords?: string[];\r\n    links: {\r\n      bugs?: string;\r\n      homepage?: string;\r\n      npm?: string;\r\n      repository?: string;\r\n    };\r\n  };\r\n  score: {\r\n    detail: {\r\n      maintenance: number;\r\n      popularity: number;\r\n      quality: number;\r\n    };\r\n    final: number;\r\n  };\r\n  searchScore: number;\r\n};\r\nexport type PackagesList = PackageSearchResult[];\r\n\r\nexport class PackageApi {\r\n  static async deps(packageName: string) {\r\n    const url = `https://api.npms.io/v2/package/${encodeURIComponent(packageName)}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as Deps;\r\n  }\r\n  static async list(query: string, num: number) {\r\n    if (query.length === 0) {\r\n      return [];\r\n    }\r\n    const url = `https://api.npms.io/v2/search/suggestions?q=${encodeURIComponent(query)}&size=${num}`;\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(`[Status: ${response.status}] ${response.statusText}`);\r\n    return (await response.json()) as PackagesList;\r\n  }\r\n}\r\n","import { SagaIterator } from 'redux-saga';\r\nimport { takeLatest, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { FETCH_PACKAGES_LIST, FETCH_MULTIPLE_PACKAGES_DETAILS } from '../actionTypes';\r\nimport {\r\n  ActionFetchPackagesList,\r\n  updatePackagesListAction,\r\n  errorPackagesListAction,\r\n  ActionFetchMultiplePackagesDetails,\r\n  updatePackageDetailsAction,\r\n  errorPackageDetailsAction,\r\n  startMultiplePackagesDetailsAction\r\n} from '../actions';\r\nimport { PackageApi, PackagesList, Deps } from './PackageApi';\r\n\r\nfunction* fetchPackagesList(action: ActionFetchPackagesList) {\r\n  const {\r\n    payload: { query, numResults }\r\n  } = action;\r\n  try {\r\n    const searchResults: PackagesList = yield call(() => PackageApi.list(query, numResults));\r\n    yield put(updatePackagesListAction(query, searchResults));\r\n  } catch (error) {\r\n    yield put(errorPackagesListAction(query, (error as any).message || String(error)));\r\n  }\r\n}\r\n\r\nfunction* fetchMultiplePackagesDetails(action: ActionFetchMultiplePackagesDetails) {\r\n  const {\r\n    payload: { packages }\r\n  } = action;\r\n  yield put(startMultiplePackagesDetailsAction(packages));\r\n  for (const packageName of packages) {\r\n    try {\r\n      const depsDetails: Deps = yield call(() => PackageApi.deps(packageName));\r\n      yield put(updatePackageDetailsAction(packageName, depsDetails));\r\n    } catch (error) {\r\n      yield put(errorPackageDetailsAction(packageName, (error as any).message || String(error)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga(): SagaIterator {\r\n  yield takeLatest(FETCH_PACKAGES_LIST, fetchPackagesList);\r\n  yield takeEvery(FETCH_MULTIPLE_PACKAGES_DETAILS, fetchMultiplePackagesDetails);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\r\n\r\nimport './QueryError.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\n\r\ninterface Props {\r\n  error: string;\r\n  retry: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryError extends React.Component<Props, State> {\r\n  render() {\r\n    return (\r\n      <div className=\"query-error\">\r\n        <p>Query failed with error: {this.props.error}</p>\r\n        <Button variant=\"contained\" onClick={() => this.props.retry()}>\r\n          Retry <Refresh />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryError;\r\n","import React from 'react';\r\n\r\nimport './PackageQueryResult.css';\r\nimport { PackageSearchResult } from '../redux/sagas/PackageApi';\r\nimport Card from '@material-ui/core/Card/Card';\r\nimport CardContent from '@material-ui/core/CardContent/CardContent';\r\nimport Typography from '@material-ui/core/Typography/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar/Avatar';\r\nimport { select } from 'redux-saga/effects';\r\n\r\ninterface Props {\r\n  package: PackageSearchResult['package'];\r\n  score: PackageSearchResult['score'];\r\n  searchScore: PackageSearchResult['searchScore'];\r\n  select: () => void;\r\n}\r\ntype State = {};\r\n\r\nclass PackageQueryResult extends React.Component<Props, State> {\r\n  render() {\r\n    const packageName = this.props.package.name;\r\n    const authorName = this.props.package.author ? this.props.package.author.name : 'N.A';\r\n    const scores = this.props.score.detail;\r\n    const adjustedScores = {\r\n      maintenance: Math.round(5 * scores.maintenance),\r\n      popularity: Math.round(5 * scores.popularity),\r\n      quality: Math.round(5 * scores.quality)\r\n    };\r\n    return (\r\n      <Card className=\"package-card\" onClick={() => this.props.select()}>\r\n        <CardHeader\r\n          className=\"card-header\"\r\n          avatar={\r\n            <Avatar className=\"card-avatar\" aria-label={packageName}>\r\n              {packageName[0] || ''}\r\n            </Avatar>\r\n          }\r\n          title={packageName}\r\n          subheader={this.props.package.version}\r\n        />\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {authorName}\r\n          </Typography>\r\n          <Typography component=\"p\">{this.props.package.description}</Typography>\r\n          <div className=\"package-scores\">\r\n            <Avatar title=\"maintenance [0-5]\" className={`package-score-${adjustedScores.maintenance}`}>\r\n              {adjustedScores.maintenance}\r\n            </Avatar>\r\n            <Avatar title=\"popularity [0-5]\" className={`package-score-${adjustedScores.popularity}`}>\r\n              {adjustedScores.popularity}\r\n            </Avatar>\r\n            <Avatar title=\"quality [0-5]\" className={`package-score-${adjustedScores.quality}`}>\r\n              {adjustedScores.quality}\r\n            </Avatar>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PackageQueryResult;\r\n","import React from 'react';\r\n\r\nimport './QueryResults.css';\r\nimport { PackageSearchResult } from '../redux/sagas/PackageApi';\r\nimport PackageQueryResult from './PackageQueryResult';\r\n\r\ninterface Props {\r\n  query: string;\r\n  results: PackageSearchResult[];\r\n  selectPackage: (packageName: string) => void;\r\n}\r\ntype State = {};\r\n\r\nclass QueryResults extends React.Component<Props, State> {\r\n  render() {\r\n    const id = 'query-results';\r\n    if (this.props.query.length === 0) {\r\n      return <div id={id} />;\r\n    }\r\n    if (this.props.results.length === 0) {\r\n      return (\r\n        <div id={id}>\r\n          <p>No results</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id={id}>\r\n        <div className=\"query-results-cards\">\r\n          <ul>\r\n            {this.props.results.map((r, key) => (\r\n              <li key={`li-${key}`}>\r\n                <PackageQueryResult\r\n                  key={key}\r\n                  package={r.package}\r\n                  score={r.score}\r\n                  searchScore={r.searchScore}\r\n                  select={() => this.props.selectPackage(r.package.name)}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueryResults;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageSelector.css';\r\nimport { ReduxState } from '../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { fetchPackagesListAction, switchToPackageDetailsModeAction, switchToSearchModeAction } from '../redux/actions';\r\nimport QueryError from './QueryError';\r\nimport QueryResults from './QueryResults';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\r\nimport Http from '@material-ui/icons/Http';\r\nimport Error from '@material-ui/icons/Error';\r\nimport Done from '@material-ui/icons/Done';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = { currentQuery: string };\r\n\r\nexport class PackageSelector extends React.Component<Props, State> {\r\n  static NumResultsPerQuery = 9;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { currentQuery: '' };\r\n  }\r\n  fetchQuery(query: string) {\r\n    if (!this.props.fullSize) {\r\n      this.props.switchToSearchModeAction();\r\n    }\r\n    this.props.fetchPackagesListAction(query, PackageSelector.NumResultsPerQuery);\r\n  }\r\n  fetch(event: ChangeEvent<HTMLInputElement>) {\r\n    const query = event.currentTarget.value;\r\n    this.setState({ currentQuery: query });\r\n    this.fetchQuery(query);\r\n  }\r\n  openPackage(packageName: string) {\r\n    this.props.switchToPackageDetailsModeAction(packageName);\r\n  }\r\n  render() {\r\n    const adornmentIcon =\r\n      this.state.currentQuery !== this.props.query ? <Http /> : this.props.error == null ? <Done /> : <Error />;\r\n    return (\r\n      <div id=\"package-selector\" className={this.props.fullSize ? 'full-size-selector' : 'side-selector'}>\r\n        <TextField\r\n          id=\"package-name-input\"\r\n          label=\"Package Name\"\r\n          variant=\"outlined\"\r\n          onChange={(event: ChangeEvent<HTMLInputElement>) => this.fetch(event)}\r\n          onClick={() => this.props.switchToSearchModeAction()}\r\n          value={this.state.currentQuery}\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"start\">{adornmentIcon}</InputAdornment>\r\n          }}\r\n        />\r\n        {this.props.fullSize ? (\r\n          this.props.error == null ? (\r\n            <QueryResults\r\n              query={this.props.query}\r\n              results={this.props.results}\r\n              selectPackage={(packageName: string) => this.openPackage(packageName)}\r\n            />\r\n          ) : (\r\n            <QueryError error={this.props.error} retry={() => this.fetchQuery(this.state.currentQuery)} />\r\n          )\r\n        ) : (\r\n          undefined\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState) {\r\n  return { ...state.packageDetails.suggestions, fullSize: state.packageDetails.packageDetailsMode == null };\r\n}\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return {\r\n    ...bindActionCreators(\r\n      { fetchPackagesListAction, switchToPackageDetailsModeAction, switchToSearchModeAction },\r\n      dispatch\r\n    )\r\n  };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageSelector);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './PackageDetailsGraph.css';\r\nimport { ReduxState } from '../redux/reducers';\r\nimport { Dispatch, bindActionCreators, Action } from 'redux';\r\n\r\nimport { ForceGraph2D } from 'react-force-graph';\r\n\r\nimport { DependenciesStatus } from '../redux/reducers/packageDetails';\r\nimport { fetchMultiplePackagesDetailsAction } from '../redux/actions';\r\n\r\ninterface Props extends StateProps, DispatchProps {}\r\ntype State = {\r\n  data?: {\r\n    nodes: { label: string; color: string }[];\r\n    links: { source: string; target: string }[];\r\n  };\r\n};\r\n\r\nclass PackageDetailsGraph extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = this.computeState(this.props);\r\n  }\r\n  computeState(props: Props) {\r\n    const nodes: { label: string; color: string }[] = [];\r\n    const links: { source: string; target: string }[] = [];\r\n    const unscanned: string[] = [];\r\n    let ready = true;\r\n\r\n    const antiDuplicates: { [packageName: string]: true } =\r\n      props.packageName != null ? { [props.packageName]: true } : {};\r\n    const unvisited = props.packageName != null ? [props.packageName] : [];\r\n    while (unvisited.length > 0) {\r\n      const currentPackage = unvisited.pop()!;\r\n      const deps = props.knownDependencies[currentPackage];\r\n      if (deps == null) {\r\n        nodes.push({ color: 'black', label: currentPackage });\r\n        unscanned.push(currentPackage);\r\n        ready = false;\r\n        continue;\r\n      }\r\n      switch (deps.status) {\r\n        case DependenciesStatus.Error:\r\n          nodes.push({ color: 'red', label: currentPackage });\r\n          break;\r\n        case DependenciesStatus.OnGoing:\r\n          nodes.push({ color: 'green', label: currentPackage });\r\n          ready = false;\r\n          break;\r\n        case DependenciesStatus.Success:\r\n        default:\r\n          nodes.push({ color: 'blue', label: currentPackage });\r\n          break;\r\n      }\r\n      for (const requirement of deps.dependencies) {\r\n        links.push({ target: currentPackage, source: requirement });\r\n        if (!antiDuplicates[requirement]) {\r\n          unvisited.push(requirement);\r\n          antiDuplicates[requirement] = true;\r\n        }\r\n      }\r\n    }\r\n    if (unscanned.length > 0) {\r\n      console.warn(`Asking some more packages: `, unscanned);\r\n      this.props.fetchMultiplePackagesDetailsAction(unscanned);\r\n    }\r\n    return ready ? { data: { nodes, links } } : {};\r\n  }\r\n  componentWillReceiveProps(nextProps: Props) {\r\n    const state = this.computeState(nextProps);\r\n    if (JSON.stringify(this.state) !== JSON.stringify(state)) {\r\n      this.setState(state);\r\n    }\r\n  }\r\n  hoverNode(node: any) {\r\n    console.log(`Hover: `, node);\r\n  }\r\n  clickNode(node: any) {\r\n    console.log(`Click: `, node);\r\n  }\r\n  render() {\r\n    if (this.props.packageName == null || this.state.data == null) {\r\n      return <div className=\"package-details no-display\" />;\r\n    }\r\n    const nodes = this.state.data.nodes.map(n => ({ id: n.label, color: n.color }));\r\n    const links = this.state.data.links;\r\n    return (\r\n      <div className=\"package-details\">\r\n        <h2>\r\n          {this.props.packageName} ({this.state.data.nodes.length} packages)\r\n        </h2>\r\n        <div className=\"package-force-directed\">\r\n          <ForceGraph2D\r\n            graphData={{ nodes, links }}\r\n            nodeLabel=\"id\"\r\n            width={800}\r\n            height={600}\r\n            linkDirectionalParticles={1}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: ReduxState) {\r\n  return {\r\n    knownDependencies: state.packageDetails.knownDependencies,\r\n    packageName: state.packageDetails.packageDetailsMode\r\n  };\r\n}\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>) {\r\n  return { ...bindActionCreators({ fetchMultiplePackagesDetailsAction }, dispatch) };\r\n}\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PackageDetailsGraph);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport PackageSelector from './components/PackageSelector';\nimport PackageDetailsGraph from './components/PackageDetailsGraph';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"main\">\n        <h1>Package Analyzer</h1>\n        <PackageSelector />\n        <PackageDetailsGraph />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}